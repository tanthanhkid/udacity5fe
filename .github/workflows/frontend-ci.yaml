name: frontend-ci

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Install the dependencies.
      - run: npm ci

      # Run the linter.
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Install the dependencies.
      - run: npm ci

      # Run the tests.
      - run: CI=true npm test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x

      # Install the dependencies.
      - run: npm ci

      # Build the Docker image for production deployment.
      - run: docker build --build-arg REACT_APP_MOVIE_API_URL=http://localhost:5000 -t frontend-app .

      # Send a console message at completion.
      - run: echo "Hello ${{ github.actor }}. You pushed to ${{ github.repository }} at $(date)."
